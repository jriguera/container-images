#!/usr/bin/with-contenv bash
# shellcheck shell=bash

# Set default config directory if not provided
CONFIGDIR="${CONFIGDIR:-/config}"
CONFIGDIR_WEBHOOK="${CONFIGDIR_WEBHOOK:-${CONFIGDIR}/webhook}"

# Webhook configuration parameters (defaults set in init-webhooks-config)
export WEBHOOK_PORT="${WEBHOOK_PORT:-9000}"
export WEBHOOK_VERBOSE="${WEBHOOK_VERBOSE:-false}"
export WEBHOOK_HOTRELOAD="${WEBHOOK_HOTRELOAD:-true}"
export WEBHOOK_ADDR="${WEBHOOK_ADDR:-0.0.0.0}"

# Build webhook command arguments
WEBHOOK_ARGS=( -hooks "${CONFIGDIR_WEBHOOK}/hooks.yaml" -ip "${WEBHOOK_ADDR}" -port "${WEBHOOK_PORT}" -urlprefix '""' )
[[ "${WEBHOOK_VERBOSE}" == "true" ]] && WEBHOOK_ARGS+=(-verbose)
[[ "${WEBHOOK_HOTRELOAD}" == "true" ]] && WEBHOOK_ARGS+=(-hotreload)

if [[ ${WEBHOOK_ENABLED} == "false" ]]
then
    echo "* Disabling Webhook"
    s6-notifyoncheck -d -n 300 -w 60000 -c "true" "sleep infinity"
else
  # Health check command
  cmd="nc -z ${WEBHOOK_ADDR} ${WEBHOOK_PORT}"
  if [[ -z ${LSIO_NON_ROOT_USER} ]]
  then
      exec s6-notifyoncheck -d -n 300 -w 60000 -c "${cmd}" s6-setuidgid abc /usr/bin/webhook "${WEBHOOK_ARGS[@]}"
  else
      exec s6-notifyoncheck -d -n 300 -w 60000 -c "${cmd}" /usr/bin/webhook "${WEBHOOK_ARGS[@]}"
  fi
fi
